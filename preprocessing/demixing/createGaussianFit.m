function [xData,yData,fitresult, gof] = createGaussianFit(cx,varargin)
%CREATEFIT(CX)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      Y Output: cx
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Apr-2021 10:43:39

%% OPTIONS
options.plotAverage=false;
options.plotColor=[];
options.fittype='gauss1';

%% USER-DEFINED INPUT OPTIONS
if nargin>1
    options=getOptions(options,varargin);
end


%% FUNCTION CORE
[xData, yData] = prepareCurveData( [], cx );

switch options.fittype
    case 'gauss2'
        % Set up fittype and options.
        ft = fittype( 'gauss2' );
        opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
        opts.Display = 'Off';
        opts.Lower = [-Inf -Inf 0 -Inf -Inf 0];
        opts.Normalize = 'on';
        opts.StartPoint = [5913.10105035617 0 0.250943494910653 5442.42525766499 -0.43994134506406 0.170213212755053];
        
    case 'gauss1'
        % Set up fittype and options.
        ft = fittype( 'gauss1' );
        opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
        opts.Display = 'Off';
        opts.Lower = [-Inf -Inf 0];
        opts.Normalize = 'on';
        opts.StartPoint = [5913.10105035617 0 0.501886989821306];        
end

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% % Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, xData, yData );
% legend( h, 'cx', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% ylabel( 'cx', 'Interpreter', 'none' );
% grid on


